// Code generated by goa v3.11.3, DO NOT EDIT.
//
// sop gRPC server encoders and decoders
//
// Command:
// $ goa gen stocktrader/design

package server

import (
	"context"
	soppb "stocktrader/gen/grpc/sop/pb"
	sop "stocktrader/gen/sop"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodePlanResponse encodes responses from the "sop" service "plan" endpoint.
func EncodePlanResponse(ctx context.Context, v any, hdr, trlr *metadata.MD) (any, error) {
	result, ok := v.(int)
	if !ok {
		return nil, goagrpc.ErrInvalidType("sop", "plan", "int", v)
	}
	resp := NewProtoPlanResponse(result)
	return resp, nil
}

// DecodePlanRequest decodes requests sent to "sop" service "plan" endpoint.
func DecodePlanRequest(ctx context.Context, v any, md metadata.MD) (any, error) {
	var (
		message *soppb.PlanRequest
		ok      bool
	)
	{
		if message, ok = v.(*soppb.PlanRequest); !ok {
			return nil, goagrpc.ErrInvalidType("sop", "plan", "*soppb.PlanRequest", v)
		}
	}
	var payload *sop.PlanPayload
	{
		payload = NewPlanPayload(message)
	}
	return payload, nil
}
