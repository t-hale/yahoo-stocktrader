// Code generated by goa v3.11.3, DO NOT EDIT.
//
// sop gRPC client
//
// Command:
// $ goa gen stocktrader/design

package client

import (
	"context"
	soppb "stocktrader/gen/grpc/sop/pb"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
	"google.golang.org/grpc"
)

// Client lists the service endpoint gRPC clients.
type Client struct {
	grpccli soppb.SopClient
	opts    []grpc.CallOption
}

// NewClient instantiates gRPC client for all the sop service servers.
func NewClient(cc *grpc.ClientConn, opts ...grpc.CallOption) *Client {
	return &Client{
		grpccli: soppb.NewSopClient(cc),
		opts:    opts,
	}
}

// Plan calls the "Plan" function in soppb.SopClient interface.
func (c *Client) Plan() goa.Endpoint {
	return func(ctx context.Context, v any) (any, error) {
		inv := goagrpc.NewInvoker(
			BuildPlanFunc(c.grpccli, c.opts...),
			EncodePlanRequest,
			DecodePlanResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}
